warning: in the working copy of 'tetris_Gymnasium.ipynb', LF will be replaced by CRLF the next time Git touches it
diff --git a/tetris_Gymnasium.ipynb b/tetris_Gymnasium.ipynb
index 4f091e2..3cee446 100644
--- a/tetris_Gymnasium.ipynb
+++ b/tetris_Gymnasium.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 36,
    "id": "79ef7848",
    "metadata": {},
    "outputs": [],
@@ -31,7 +31,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 67,
+   "execution_count": 37,
    "id": "d3ea08c6",
    "metadata": {},
    "outputs": [],
@@ -81,7 +81,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 68,
+   "execution_count": 38,
    "id": "6889c179",
    "metadata": {},
    "outputs": [],
@@ -134,7 +134,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 69,
+   "execution_count": 39,
    "id": "625b377d",
    "metadata": {},
    "outputs": [],
@@ -180,9 +180,14 @@
     "### **Training**"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": []
+  },
   {
    "cell_type": "code",
-   "execution_count": 70,
+   "execution_count": 40,
    "id": "8b7af487",
    "metadata": {},
    "outputs": [],
@@ -239,7 +244,7 @@
     "                shaped_reward = -0.01  # penalty for doing nothing\n",
     "\n",
     "            if reward > 0:\n",
-    "                shaped_reward = reward * 10  # amplify reward for clearing lines\n",
+    "                shaped_reward = reward * 100  # amplify reward for clearing lines\n",
     "\n",
     "            memory.push(state, action, shaped_reward, next_state, done)\n",
     "            state = next_state\n",
@@ -278,7 +283,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 71,
+   "execution_count": 41,
    "id": "911a4115",
    "metadata": {},
    "outputs": [
@@ -286,67 +291,94 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Episode 0, Reward: 11, Epsilon: 0.98\n",
-      "Episode 1, Reward: 11, Epsilon: 0.97\n",
-      "Episode 2, Reward: 11, Epsilon: 0.96\n",
-      "Episode 3, Reward: 11, Epsilon: 0.95\n",
-      "Episode 4, Reward: 11, Epsilon: 0.93\n",
-      "Episode 5, Reward: 10, Epsilon: 0.92\n",
-      "Episode 6, Reward: 8, Epsilon: 0.92\n",
-      "Episode 7, Reward: 10, Epsilon: 0.91\n",
-      "Episode 8, Reward: 10, Epsilon: 0.90\n",
-      "Episode 9, Reward: 14, Epsilon: 0.89\n",
-      "Episode 10, Reward: 8, Epsilon: 0.89\n",
-      "Episode 11, Reward: 9, Epsilon: 0.88\n",
-      "Episode 12, Reward: 10, Epsilon: 0.88\n",
-      "Episode 13, Reward: 10, Epsilon: 0.87\n",
-      "Episode 14, Reward: 9, Epsilon: 0.86\n",
-      "Episode 15, Reward: 8, Epsilon: 0.86\n",
-      "Episode 16, Reward: 11, Epsilon: 0.85\n",
-      "Episode 17, Reward: 10, Epsilon: 0.84\n",
-      "Episode 18, Reward: 7, Epsilon: 0.84\n",
-      "Episode 19, Reward: 9, Epsilon: 0.83\n",
-      "Episode 20, Reward: 9, Epsilon: 0.83\n",
-      "Episode 21, Reward: 8, Epsilon: 0.83\n",
-      "Episode 22, Reward: 10, Epsilon: 0.82\n",
-      "Episode 23, Reward: 10, Epsilon: 0.81\n",
-      "Episode 24, Reward: 9, Epsilon: 0.81\n",
-      "Episode 25, Reward: 9, Epsilon: 0.80\n",
-      "Episode 26, Reward: 9, Epsilon: 0.80\n",
-      "Episode 27, Reward: 9, Epsilon: 0.80\n",
-      "Episode 28, Reward: 10, Epsilon: 0.79\n",
-      "Episode 29, Reward: 11, Epsilon: 0.79\n",
-      "Episode 30, Reward: 8, Epsilon: 0.78\n",
-      "Episode 31, Reward: 10, Epsilon: 0.78\n",
-      "Episode 32, Reward: 9, Epsilon: 0.78\n",
-      "Episode 33, Reward: 11, Epsilon: 0.77\n",
-      "Episode 34, Reward: 12, Epsilon: 0.77\n",
-      "Episode 35, Reward: 11, Epsilon: 0.76\n",
-      "Episode 36, Reward: 9, Epsilon: 0.76\n",
-      "Episode 37, Reward: 9, Epsilon: 0.75\n",
-      "Episode 38, Reward: 10, Epsilon: 0.75\n",
-      "Episode 39, Reward: 8, Epsilon: 0.75\n",
-      "Episode 40, Reward: 9, Epsilon: 0.74\n",
-      "Episode 41, Reward: 9, Epsilon: 0.74\n",
-      "Episode 42, Reward: 10, Epsilon: 0.74\n",
-      "Episode 43, Reward: 8, Epsilon: 0.73\n",
-      "Episode 44, Reward: 10, Epsilon: 0.73\n",
-      "Episode 45, Reward: 11, Epsilon: 0.73\n",
-      "Episode 46, Reward: 9, Epsilon: 0.72\n",
-      "Episode 47, Reward: 9, Epsilon: 0.72\n",
-      "Episode 48, Reward: 9, Epsilon: 0.72\n",
-      "Episode 49, Reward: 10, Epsilon: 0.71\n"
+      "Episode 0, Reward: 11, Epsilon: 0.99\n",
+      "Episode 1, Reward: 9, Epsilon: 0.98\n",
+      "Episode 2, Reward: 7, Epsilon: 0.97\n",
+      "Episode 3, Reward: 11, Epsilon: 0.96\n",
+      "Episode 4, Reward: 8, Epsilon: 0.95\n",
+      "Episode 5, Reward: 10, Epsilon: 0.94\n",
+      "Episode 6, Reward: 9, Epsilon: 0.94\n",
+      "Episode 7, Reward: 13, Epsilon: 0.92\n",
+      "Episode 8, Reward: 10, Epsilon: 0.92\n",
+      "Episode 9, Reward: 8, Epsilon: 0.91\n",
+      "Episode 10, Reward: 8, Epsilon: 0.91\n",
+      "Episode 11, Reward: 10, Epsilon: 0.90\n",
+      "Episode 12, Reward: 11, Epsilon: 0.89\n",
+      "Episode 13, Reward: 9, Epsilon: 0.89\n",
+      "Episode 14, Reward: 10, Epsilon: 0.88\n",
+      "Episode 15, Reward: 7, Epsilon: 0.88\n",
+      "Episode 16, Reward: 11, Epsilon: 0.87\n",
+      "Episode 17, Reward: 9, Epsilon: 0.86\n",
+      "Episode 18, Reward: 8, Epsilon: 0.86\n",
+      "Episode 19, Reward: 12, Epsilon: 0.85\n",
+      "Episode 20, Reward: 10, Epsilon: 0.85\n",
+      "Episode 21, Reward: 9, Epsilon: 0.84\n",
+      "Episode 22, Reward: 9, Epsilon: 0.84\n",
+      "Episode 23, Reward: 9, Epsilon: 0.83\n",
+      "Episode 24, Reward: 12, Epsilon: 0.83\n",
+      "Episode 25, Reward: 10, Epsilon: 0.82\n",
+      "Episode 26, Reward: 11, Epsilon: 0.82\n",
+      "Episode 27, Reward: 10, Epsilon: 0.81\n",
+      "Episode 28, Reward: 11, Epsilon: 0.81\n",
+      "Episode 29, Reward: 11, Epsilon: 0.80\n",
+      "Episode 30, Reward: 9, Epsilon: 0.80\n",
+      "Episode 31, Reward: 11, Epsilon: 0.79\n",
+      "Episode 32, Reward: 9, Epsilon: 0.79\n",
+      "Episode 33, Reward: 14, Epsilon: 0.78\n",
+      "Episode 34, Reward: 9, Epsilon: 0.78\n",
+      "Episode 35, Reward: 11, Epsilon: 0.77\n",
+      "Episode 36, Reward: 9, Epsilon: 0.77\n",
+      "Episode 37, Reward: 10, Epsilon: 0.77\n",
+      "Episode 38, Reward: 10, Epsilon: 0.76\n",
+      "Episode 39, Reward: 9, Epsilon: 0.76\n",
+      "Episode 40, Reward: 10, Epsilon: 0.76\n",
+      "Episode 41, Reward: 10, Epsilon: 0.75\n",
+      "Episode 42, Reward: 10, Epsilon: 0.75\n",
+      "Episode 43, Reward: 8, Epsilon: 0.75\n",
+      "Episode 44, Reward: 9, Epsilon: 0.74\n",
+      "Episode 45, Reward: 9, Epsilon: 0.74\n",
+      "Episode 46, Reward: 9, Epsilon: 0.74\n",
+      "Episode 47, Reward: 12, Epsilon: 0.73\n",
+      "Episode 48, Reward: 11, Epsilon: 0.73\n",
+      "Episode 49, Reward: 9, Epsilon: 0.73\n"
      ]
     }
    ],
    "source": [
     "q_net, rewards = train_dqn()"
    ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 42,
+   "id": "a43497d4",
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 1000x500 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.figure(figsize=(10,5))\n",
+    "plt.plot(rewards, label='Reward per Episode')\n",
+    "plt.xlabel('Episode')\n",
+    "plt.ylabel('Total Reward')\n",
+    "plt.title('DQN Training Progress')\n",
+    "plt.legend()\n",
+    "plt.show()"
+   ]
   }
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "ml-pytorch",
+   "display_name": "rl_finals",
    "language": "python",
    "name": "python3"
   },
@@ -360,7 +392,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.11.11"
+   "version": "3.10.18"
   }
  },
  "nbformat": 4,
